{"version":3,"sources":["Component/Card.tsx","Component/PokeInfo.tsx","Component/Main.tsx","App.tsx","index.tsx"],"names":["Card","pokemons","loading","infoPokemon","map","pokemon","role","tabIndex","className","onClick","src","id","alt","name","types","t","type","PokeInfo","data","abilities","poke","ability","stats","stat","base_stat","Main","useState","pokeData","setPokeData","isLoaded","setIsLoaded","url","setUrl","nextUrl","setNextUrl","pokeInfo","setPokeInfo","getPokemon","response","a","item","fetch","then","res","json","result","prevState","newState","sort","b","pokeFun","resultFetch","next","results","slice","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f8df51c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  pokemons: Array<any>,\n  loading: boolean,\n  infoPokemon: (poke: any) => void,\n};\n\nexport const Card: React.FC<Props> = ({ pokemons, loading, infoPokemon }) => {\n  return (\n    <>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        pokemons.map(pokemon => {\n          return (\n            /* eslint-disable-next-line jsx-a11y/click-events-have-key-events */\n            <div\n              role=\"button\"\n              tabIndex={0}\n              className=\"card\"\n              key={pokemon.id}\n              onClick={() => infoPokemon(pokemon)}\n            >\n              <div className=\"photo-conteiner\">\n                <img className=\"photo-pok\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${pokemon.id}.svg`} alt={`${pokemon.name}`} />\n              </div>\n              <h3 className=\"poke-name\">{pokemon.name}</h3>\n              <div className=\"poke-type-conteiner\">\n                {pokemon.types.map((t: { type: { name: string; }; }) => {\n                  return (\n                    <div\n                      className=\"poke-type\"\n                      key={pokemon.id}\n                    >\n                      {t.type.name}\n                    </div>\n                  );\n                })}\n              </div>\n\n            </div>\n          );\n        })\n      )}\n    </>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  data: any;\n};\n\nexport const PokeInfo: React.FC<Props> = ({ data }) => {\n  return (\n    <>\n      {data && (\n        <div className=\"poke-info\">\n          <h1>{data.name}</h1>\n          <img className=\"poke-info-photo\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${data.id}.svg`} alt={`${data.name}`} />\n          <div className=\"abilities\">\n            {data.abilities.map((poke: { ability: { name: string }; }) => {\n              return (\n                <>\n                  <div className=\"group\">\n                    <h2>{poke.ability.name}</h2>\n                  </div>\n                </>\n              );\n            })}\n          </div>\n          <div className=\"base-stat\">\n            {data.stats.map((poke: {\n              stat: {\n                name: string | number\n              };\n              base_stat: number\n            }) => {\n              return (\n                <>\n                  <h3>\n                    {poke.stat.name}\n                    :\n                    {poke.base_stat}\n                  </h3>\n                </>\n              );\n            })}\n          </div>\n        </div>\n      )}\n\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Card } from './Card';\nimport { PokeInfo } from './PokeInfo';\n\nexport const Main: React.FC = () => {\n  const [pokeData, setPokeData] = useState<Array<any>>([]);\n  const [isLoaded, setIsLoaded] = useState(true);\n  const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon/');\n  const [nextUrl, setNextUrl] = useState();\n  const [pokeInfo, setPokeInfo] = useState();\n\n  const getPokemon = async (response: any[]) => {\n    response.map(async (item) => {\n      const result = await fetch(item.url).then(res => res.json());\n\n      setPokeData((prevState) => {\n        const newState = [...prevState, result];\n\n        newState.sort((a, b) => a.id - b.id);\n\n        return newState;\n      });\n    });\n  };\n\n  const pokeFun = async () => {\n    setIsLoaded(true);\n    const resultFetch = await fetch(url)\n      .then(res => res.json());\n\n    setNextUrl(resultFetch.next);\n    getPokemon(resultFetch.results.slice(0, 12));\n    setIsLoaded(false);\n  };\n\n  useEffect(() => {\n    pokeFun();\n  }, [url]);\n\n  return (\n    <>\n      <div className=\"title\">\n        <h1>Pokedex</h1>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"left_content-container\">\n          <div className=\"left_content\">\n            <Card pokemons={pokeData} loading={isLoaded} infoPokemon={poke => setPokeInfo(poke)} />\n          </div>\n\n          <div className=\"btn-group\">\n            {nextUrl\n              && (\n            /* eslint-disable-next-line jsx-a11y/click-events-have-key-events */\n                <button\n                  type=\"button\"\n                  className=\"loadBt\"\n                  onClick={() => {\n                    setUrl(nextUrl || '');\n                  }}\n                >\n                  Load More\n                </button>\n              )}\n          </div>\n        </div>\n        <div className=\"right_content\">\n          <PokeInfo data={pokeInfo} />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Main } from './Component/Main';\nimport './Component/style.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Main />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}